package projetomaker;

import DBA.*;
import java.awt.Font;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JOptionPane;


public class BackEnd extends javax.swing.JFrame { 
    /**
     * Creates new form eshop
     */
    public BackEnd() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLista = new javax.swing.JList<>();
        lblTitulo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuMonitor = new javax.swing.JMenu();
        CadastrarMonitor = new javax.swing.JMenuItem();
        EditarMonitor = new javax.swing.JMenuItem();
        RemoverMonitor = new javax.swing.JMenuItem();
        ListarMonitores = new javax.swing.JMenuItem();
        SolicitarMonitores = new javax.swing.JMenuItem();
        ReceberMonitores = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        CadastrarMouse = new javax.swing.JMenuItem();
        EditarMouse = new javax.swing.JMenuItem();
        RemoverMouse = new javax.swing.JMenuItem();
        ListarMouses = new javax.swing.JMenuItem();
        SolicitarMouses = new javax.swing.JMenuItem();
        ReceberMouses = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        CadastrarTeclado = new javax.swing.JMenuItem();
        EditarTeclado = new javax.swing.JMenuItem();
        RemoverTeclado = new javax.swing.JMenuItem();
        ListarTeclados = new javax.swing.JMenuItem();
        SolicitarTeclados = new javax.swing.JMenuItem();
        ReceberTeclados = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        CadastrarFornecedor = new javax.swing.JMenuItem();
        EditarFornecedor = new javax.swing.JMenuItem();
        RemoverFornecedor = new javax.swing.JMenuItem();
        ListarFornecedores = new javax.swing.JMenuItem();
        ListarCompras = new javax.swing.JMenuItem();
        Voltar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));

        jPanel1.setBackground(new java.awt.Color(2, 11, 38));

        jPanel2.setBackground(new java.awt.Color(2, 11, 38));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 255, 255), 3, true));
        jPanel2.setAlignmentX(0.0F);
        jPanel2.setAlignmentY(0.0F);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetomaker/banner.png"))); // NOI18N
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(4, 24, 64), 2, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(165, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(154, 154, 154))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(220, 235, 243));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255), 3));
        jPanel3.setForeground(new java.awt.Color(153, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(153, 255, 255)));

        jLista.setBackground(new java.awt.Color(220, 235, 243));
        jLista.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(2, 11, 38), 1, true));
        jLista.setFont(jLista.getFont().deriveFont((float)18));
        jLista.setForeground(new java.awt.Color(2, 31, 49));
        jLista.setAlignmentX(0.0F);
        jLista.setAlignmentY(0.0F);
        jScrollPane1.setViewportView(jLista);

        lblTitulo.setFont(new java.awt.Font("Agency FB", 1, 16)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jMenuBar1.setBackground(new java.awt.Color(164, 205, 224));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 24, 64), new java.awt.Color(204, 255, 255)));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setAlignmentX(2.0F);
        jMenuBar1.setAlignmentY(2.0F);
        jMenuBar1.setFont(new java.awt.Font("Agency FB", 0, 12)); // NOI18N
        jMenuBar1.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jMenuBar1.setMaximumSize(new java.awt.Dimension(398, 50));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(398, 50));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(200, 50));

        MenuMonitor.setBackground(new java.awt.Color(255, 51, 51));
        MenuMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetomaker/monitor.png"))); // NOI18N
        MenuMonitor.setText("Monitor");
        MenuMonitor.setAlignmentX(2.0F);
        MenuMonitor.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N

        CadastrarMonitor.setText("Cadastrar Monitor");
        CadastrarMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarMonitorActionPerformed(evt);
            }
        });
        MenuMonitor.add(CadastrarMonitor);

        EditarMonitor.setText("Editar Monitor");
        EditarMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarMonitorActionPerformed(evt);
            }
        });
        MenuMonitor.add(EditarMonitor);

        RemoverMonitor.setText("Remover Monitor");
        RemoverMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverMonitorActionPerformed(evt);
            }
        });
        MenuMonitor.add(RemoverMonitor);

        ListarMonitores.setText("Listar Monitores");
        ListarMonitores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarMonitoresActionPerformed(evt);
            }
        });
        MenuMonitor.add(ListarMonitores);

        SolicitarMonitores.setText("Solicitar Monitores");
        SolicitarMonitores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitarMonitoresActionPerformed(evt);
            }
        });
        MenuMonitor.add(SolicitarMonitores);

        ReceberMonitores.setText("Receber Monitores");
        ReceberMonitores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceberMonitoresActionPerformed(evt);
            }
        });
        MenuMonitor.add(ReceberMonitores);

        jMenuBar1.add(MenuMonitor);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetomaker/mouse.png"))); // NOI18N
        jMenu2.setText("Mouse");
        jMenu2.setAlignmentX(2.0F);
        jMenu2.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N

        CadastrarMouse.setText("Cadastrar Mouse");
        CadastrarMouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarMouseActionPerformed(evt);
            }
        });
        jMenu2.add(CadastrarMouse);

        EditarMouse.setText("Editar Mouse");
        EditarMouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarMouseActionPerformed(evt);
            }
        });
        jMenu2.add(EditarMouse);

        RemoverMouse.setText("Remover Mouse");
        RemoverMouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverMouseActionPerformed(evt);
            }
        });
        jMenu2.add(RemoverMouse);

        ListarMouses.setText("Listar Mouses");
        ListarMouses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarMousesActionPerformed(evt);
            }
        });
        jMenu2.add(ListarMouses);

        SolicitarMouses.setText("Solicitar Mouses");
        SolicitarMouses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitarMousesActionPerformed(evt);
            }
        });
        jMenu2.add(SolicitarMouses);

        ReceberMouses.setText("Receber Mouses");
        ReceberMouses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceberMousesActionPerformed(evt);
            }
        });
        jMenu2.add(ReceberMouses);

        jMenuBar1.add(jMenu2);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetomaker/teclado.png"))); // NOI18N
        jMenu1.setText("Teclado");
        jMenu1.setAlignmentX(2.0F);
        jMenu1.setFont(new java.awt.Font("Agency FB", 1, 18)); // NOI18N

        CadastrarTeclado.setText("Cadastrar Teclado");
        CadastrarTeclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarTecladoActionPerformed(evt);
            }
        });
        jMenu1.add(CadastrarTeclado);

        EditarTeclado.setText("Editar Teclado");
        EditarTeclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarTecladoActionPerformed(evt);
            }
        });
        jMenu1.add(EditarTeclado);

        RemoverTeclado.setText("Remover Teclado");
        RemoverTeclado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverTecladoActionPerformed(evt);
            }
        });
        jMenu1.add(RemoverTeclado);

        ListarTeclados.setText("Listar Teclados");
        ListarTeclados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarTecladosActionPerformed(evt);
            }
        });
        jMenu1.add(ListarTeclados);

        SolicitarTeclados.setText("Solicitar Teclados");
        SolicitarTeclados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitarTecladosActionPerformed(evt);
            }
        });
        jMenu1.add(SolicitarTeclados);

        ReceberTeclados.setText("Receber Teclados");
        ReceberTeclados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceberTecladosActionPerformed(evt);
            }
        });
        jMenu1.add(ReceberTeclados);

        jMenuBar1.add(jMenu1);

        jMenu4.setBackground(new java.awt.Color(255, 51, 0));
        jMenu4.setForeground(new java.awt.Color(255, 255, 255));
        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetomaker/user.png"))); // NOI18N
        jMenu4.setAlignmentX(2.0F);
        jMenu4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        CadastrarFornecedor.setText("Cadastrar Fornecedor");
        CadastrarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarFornecedorActionPerformed(evt);
            }
        });
        jMenu4.add(CadastrarFornecedor);

        EditarFornecedor.setText("Editar Fornecedor");
        EditarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarFornecedorActionPerformed(evt);
            }
        });
        jMenu4.add(EditarFornecedor);

        RemoverFornecedor.setText("Remover Fornecedor");
        RemoverFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverFornecedorActionPerformed(evt);
            }
        });
        jMenu4.add(RemoverFornecedor);

        ListarFornecedores.setText("Listar Fornecedores");
        ListarFornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarFornecedoresActionPerformed(evt);
            }
        });
        jMenu4.add(ListarFornecedores);

        ListarCompras.setText("Listar Compras");
        ListarCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListarComprasActionPerformed(evt);
            }
        });
        jMenu4.add(ListarCompras);

        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });
        jMenu4.add(Voltar);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("usuario");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_VoltarActionPerformed

    private void CadastrarMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarMonitorActionPerformed
        // TODO add your handling code here:
        TelaDadosMonitor tela = new TelaDadosMonitor(1,0);
        tela.setVisible(true);
    }//GEN-LAST:event_CadastrarMonitorActionPerformed

    private void ListarMonitoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarMonitoresActionPerformed
        // TODO add your handling code here:
        // Cria um objeto ProdutoDAO para acesso aos métodos de acesso
        // ao banco do Objeto Monitores
        ProdutoDAO pd = new ProdutoDAO();
        /*Chama listarMonitores de ProdutoDAO retornando uma
        Arraylist*/
        ArrayList<String> ar = pd.listarMonitores();
        // Verifica se a listagem foi gerada
        if (ar==null) {
            String mensagem = "Listagem Não Gerada!";
            JOptionPane.showMessageDialog(null, mensagem);
        }else{
            // Formata o título do relatório
        String linha = String.format("%10s|%10s|%10s|%10s|%10s|%10s|%10s|%10s",
                "CODIGO", "NOME", "MARCA", "PRECO", "FREQUENCIA", "POLEGADAS", 
                "ENTRADAS", "QTD");
        lblTitulo.setFont(new Font("Courier New", Font.PLAIN, 16));
        lblTitulo.setText(linha);
            // Vetor para preparação dos elementos da lista
            String vet[] = new String[ar.size()];
            // Carrega todos os elementos do ArrayList no vetor
            for (int i = 0; i < ar.size(); i++) {
                vet[i] = ar.get(i);
            }
            // Evita que os dados fiquem fora de ordem
            jLista.setFont(new Font("Courier New", Font.PLAIN, 16));
            jLista.setListData(vet);
            jLista.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_ListarMonitoresActionPerformed

    private void CadastrarMouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarMouseActionPerformed
        // TODO add your handling code here:
        TelaDadosMouse tela = new TelaDadosMouse(1,0);
        tela.setVisible(true);
    }//GEN-LAST:event_CadastrarMouseActionPerformed

    private void CadastrarTecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarTecladoActionPerformed
        // TODO add your handling code here:
        TelaDadosTeclado tela = new TelaDadosTeclado(1,0);
        tela.setVisible(true);
    }//GEN-LAST:event_CadastrarTecladoActionPerformed

    private void ListarMousesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarMousesActionPerformed
        // TODO add your handling code here:
        // Cria um objeto ProdutoDAO para acesso aos métodos de acesso
        // ao banco do Objeto Mouses
        ProdutoDAO pd = new ProdutoDAO();
        /*Chama listarMouses de ProdutoDAO retornando uma
        Arraylist*/
        ArrayList<String> mor = pd.listarMouses();
        // Verifica se a listagem foi gerada
        if (mor==null) {
            String mensagem = "Listagem Não Gerada!";
            JOptionPane.showMessageDialog(null, mensagem);
        }else{
            // Formata o título do relatório
        String linha = String.format("%10s|%10s|%10s|%10s|%10s|%10s|%10s",
                "CODIGO", "NOME", "MARCA", "PRECO", "DPI", "PESO", "QTD");
        lblTitulo.setFont(new Font("Courier New", Font.PLAIN, 16));
        lblTitulo.setText(linha);
            // Vetor para preparação dos elementos da lista
            String vet[] = new String[mor.size()];
            // Carrega todos os elementos do ArrayList no vetor
            for (int i = 0; i < mor.size(); i++) {
                vet[i] = mor.get(i);
            }
            // Evita que os dados fiquem fora de ordem
            jLista.setFont(new Font("Courier New", Font.PLAIN, 16));
            jLista.setListData(vet);
            jLista.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_ListarMousesActionPerformed

    private void ListarTecladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarTecladosActionPerformed
        // TODO add your handling code here:
        // Cria um objeto ProdutoDAO para acesso aos métodos de acesso
        // ao banco do Objeto Teclados
        ProdutoDAO pd = new ProdutoDAO();
        /*Chama listarTeclados de ProdutoDAO retornando uma
        Arraylist*/
        ArrayList<String> tr = pd.listarTeclados();
        // Verifica se a listagem foi gerada
        if (tr==null) {
            String mensagem = "Listagem Não Gerada!";
            JOptionPane.showMessageDialog(null, mensagem);
        }else{
            // Formata o título do relatório
        String linha = String.format("%10s|%10s|%10s|%10s|%10s|%10s|%10s|%10s",
                "CODIGO", "NOME", "MARCA", "PRECO", "TIPO", "COR", 
                "RGB", "QTD");
        lblTitulo.setFont(new Font("Courier New", Font.PLAIN, 16));
        lblTitulo.setText(linha);
            // Vetor para preparação dos elementos da lista
            String vet[] = new String[tr.size()];
            // Carrega todos os elementos do ArrayList no vetor
            for (int i = 0; i < tr.size(); i++) {
                vet[i] = tr.get(i);
            }
            // Evita que os dados fiquem fora de ordem
            jLista.setFont(new Font("Courier New", Font.PLAIN, 16));
            jLista.setListData(vet);
            jLista.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_ListarTecladosActionPerformed

    private void EditarMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarMonitorActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosMonitor tela = new TelaDadosMonitor(2, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_EditarMonitorActionPerformed

    private void EditarMouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarMouseActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosMouse tela = new TelaDadosMouse(2, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_EditarMouseActionPerformed

    private void EditarTecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarTecladoActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosTeclado tela = new TelaDadosTeclado(2, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_EditarTecladoActionPerformed

    private void RemoverMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverMonitorActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 3 - Remover e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosMonitor tela = new TelaDadosMonitor(3, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_RemoverMonitorActionPerformed

    private void RemoverMouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverMouseActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 3 - Remover e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosMouse tela = new TelaDadosMouse(3, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_RemoverMouseActionPerformed

    private void RemoverTecladoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverTecladoActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 3 - Remover e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosTeclado tela = new TelaDadosTeclado(3, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_RemoverTecladoActionPerformed

    private void CadastrarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarFornecedorActionPerformed
        // TODO add your handling code here:
        TelaDadosFornecedor tela = new TelaDadosFornecedor(1,0);
        tela.setVisible(true);
    }//GEN-LAST:event_CadastrarFornecedorActionPerformed

    private void EditarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarFornecedorActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosFornecedor tela = new TelaDadosFornecedor(2, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_EditarFornecedorActionPerformed

    private void RemoverFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverFornecedorActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 3 - Remover e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosFornecedor tela = new TelaDadosFornecedor(3, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_RemoverFornecedorActionPerformed

    private void ListarFornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarFornecedoresActionPerformed
        // TODO add your handling code here:
        // Cria um objeto FornecedorDAO para acesso aos métodos de acesso
        // ao banco do Objeto Fornecedor
        FornecedorDAO fd = new FornecedorDAO();
        /*Chama listarFornecedor de ProdutoDAO retornando uma
        Arraylist*/
        ArrayList<String> fr = fd.listarFornecedor();
        // Verifica se a listagem foi gerada
        if (fr==null) {
            String mensagem = "Listagem Não Gerada!";
            JOptionPane.showMessageDialog(null, mensagem);
        }else{
            // Formata o título do relatório
        String linha = String.format("%10s|%10s|%10s|%10s|%10s|%10s|%10s",
                "CODIGO", "NOME", "CIDADE", "BAIRRO", "RUA", "CEP", 
                "CNPJ");
        lblTitulo.setFont(new Font("Courier New", Font.PLAIN, 16));
        lblTitulo.setText(linha);
            // Vetor para preparação dos elementos da lista
            String vet[] = new String[fr.size()];
            // Carrega todos os elementos do ArrayList no vetor
            for (int i = 0; i < fr.size(); i++) {
                vet[i] = fr.get(i);
            }
            // Evita que os dados fiquem fora de ordem
            jLista.setFont(new Font("Courier New", Font.PLAIN, 16));
            jLista.setListData(vet);
            jLista.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_ListarFornecedoresActionPerformed

    private void SolicitarMonitoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolicitarMonitoresActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosReposicao tela = new TelaDadosReposicao(1, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_SolicitarMonitoresActionPerformed

    private void ReceberMonitoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceberMonitoresActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) < 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            TelaDadosReposicao tela = new TelaDadosReposicao(2, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
        } else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_ReceberMonitoresActionPerformed

    private void ListarComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListarComprasActionPerformed
        // TODO add your handling code here:
        // Cria um objeto CompraDAO para acesso aos métodos de acesso
        // ao banco do Objeto Compra
        CompraDAO cd = new CompraDAO();
        /*Chama listarCompras de ProdutoDAO retornando uma
        Arraylist*/
        ArrayList<String> cr = cd.listarCompras();
        // Verifica se a listagem foi gerada
        if (cr==null) {
            String mensagem = "Listagem Não Gerada!";
            JOptionPane.showMessageDialog(null, mensagem);
        }else{
            // Formata o título do relatório
        String linha = String.format("%10s|%10s|%10s|%10s|%10s|%10s",
                "CODIGO","CODIGOPRODUTO", "NOME", "CODIGOFORNECEDOR", "FORNECEDOR", "QTD");
        lblTitulo.setFont(new Font("Courier New", Font.PLAIN, 16));
        lblTitulo.setText(linha);
            // Vetor para preparação dos elementos da lista
            String vet[] = new String[cr.size()];
            // Carrega todos os elementos do ArrayList no vetor
            for (int i = 0; i < cr.size(); i++) {
                vet[i] = cr.get(i);
            }
            // Evita que os dados fiquem fora de ordem
            jLista.setFont(new Font("Courier New", Font.PLAIN, 16));
            jLista.setListData(vet);
            jLista.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_ListarComprasActionPerformed

    private void SolicitarMousesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolicitarMousesActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosReposicao tela = new TelaDadosReposicao(3, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_SolicitarMousesActionPerformed

    private void ReceberMousesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceberMousesActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) < 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            TelaDadosReposicao tela = new TelaDadosReposicao(4, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
        } else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_ReceberMousesActionPerformed

    private void SolicitarTecladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolicitarTecladosActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) <= 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            // Executa a janela de preenchimento de dados em modo alteração
            // 1o parâmetro = 2 - Alteração e 2o parâmetro = codigo do registro 
            // o trim() é necessário para eliminar os espaços na conversão
            TelaDadosReposicao tela = new TelaDadosReposicao(5, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
            // Configura os comonentes que serão liberados ou restringidos
        } // Verificação de segurança
        else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_SolicitarTecladosActionPerformed

    private void ReceberTecladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceberTecladosActionPerformed
        // TODO add your handling code here:
        String CODIGO = jLista.getSelectedValue().substring(0, 10);
        if (Integer.parseInt(CODIGO.trim()) != 0) {
            if (Integer.parseInt(CODIGO.trim()) < 0) {
                String mensagem = "Opção inválida!";
                JOptionPane.showMessageDialog(null, mensagem);
            }
            TelaDadosReposicao tela = new TelaDadosReposicao(6, Integer.parseInt(CODIGO.trim()));
            tela.setVisible(true);
        } else {
            String mensagem = "Opção inválida!";
            JOptionPane.showMessageDialog(null, mensagem);
        }
    }//GEN-LAST:event_ReceberTecladosActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BackEnd().setVisible(true);
            }
        });   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CadastrarFornecedor;
    private javax.swing.JMenuItem CadastrarMonitor;
    private javax.swing.JMenuItem CadastrarMouse;
    private javax.swing.JMenuItem CadastrarTeclado;
    private javax.swing.JMenuItem EditarFornecedor;
    private javax.swing.JMenuItem EditarMonitor;
    private javax.swing.JMenuItem EditarMouse;
    private javax.swing.JMenuItem EditarTeclado;
    private javax.swing.JMenuItem ListarCompras;
    private javax.swing.JMenuItem ListarFornecedores;
    private javax.swing.JMenuItem ListarMonitores;
    private javax.swing.JMenuItem ListarMouses;
    private javax.swing.JMenuItem ListarTeclados;
    private javax.swing.JMenu MenuMonitor;
    private javax.swing.JMenuItem ReceberMonitores;
    private javax.swing.JMenuItem ReceberMouses;
    private javax.swing.JMenuItem ReceberTeclados;
    private javax.swing.JMenuItem RemoverFornecedor;
    private javax.swing.JMenuItem RemoverMonitor;
    private javax.swing.JMenuItem RemoverMouse;
    private javax.swing.JMenuItem RemoverTeclado;
    private javax.swing.JMenuItem SolicitarMonitores;
    private javax.swing.JMenuItem SolicitarMouses;
    private javax.swing.JMenuItem SolicitarTeclados;
    private javax.swing.JMenuItem Voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jLista;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}
